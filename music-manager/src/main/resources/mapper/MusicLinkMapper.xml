<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.music.manager.mapper.MusicLinkMapper">
  <resultMap id="BaseResultMap" type="com.music.manager.pojo.MusicLink">
    <id column="ml_id" jdbcType="INTEGER" property="mlId" />
    <result column="ml_songName" jdbcType="VARCHAR" property="mlSongname" />
    <result column="ml_singer" jdbcType="VARCHAR" property="mlSinger" />
    <result column="ml_songLink" jdbcType="VARCHAR" property="mlSonglink" />
    <result column="ml_lyricLink" jdbcType="VARCHAR" property="mlLyriclink" />
    <result column="ml_photoLink" jdbcType="VARCHAR" property="mlPhotolink" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ml_id, ml_songName, ml_singer, ml_songLink, ml_lyricLink, ml_photoLink
  </sql>
  <select id="selectByExample" parameterType="com.music.manager.pojo.MusicLinkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from musiclink
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from musiclink
    where ml_id = #{mlId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from musiclink
    where ml_id = #{mlId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.music.manager.pojo.MusicLinkExample">
    delete from musiclink
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.music.manager.pojo.MusicLink">
    insert into musiclink (ml_id, ml_songName, ml_singer, 
      ml_songLink, ml_lyricLink, ml_photoLink
      )
    values (#{mlId,jdbcType=INTEGER}, #{mlSongname,jdbcType=VARCHAR}, #{mlSinger,jdbcType=VARCHAR}, 
      #{mlSonglink,jdbcType=VARCHAR}, #{mlLyriclink,jdbcType=VARCHAR}, #{mlPhotolink,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.music.manager.pojo.MusicLink">
    insert into musiclink
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mlId != null">
        ml_id,
      </if>
      <if test="mlSongname != null">
        ml_songName,
      </if>
      <if test="mlSinger != null">
        ml_singer,
      </if>
      <if test="mlSonglink != null">
        ml_songLink,
      </if>
      <if test="mlLyriclink != null">
        ml_lyricLink,
      </if>
      <if test="mlPhotolink != null">
        ml_photoLink,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mlId != null">
        #{mlId,jdbcType=INTEGER},
      </if>
      <if test="mlSongname != null">
        #{mlSongname,jdbcType=VARCHAR},
      </if>
      <if test="mlSinger != null">
        #{mlSinger,jdbcType=VARCHAR},
      </if>
      <if test="mlSonglink != null">
        #{mlSonglink,jdbcType=VARCHAR},
      </if>
      <if test="mlLyriclink != null">
        #{mlLyriclink,jdbcType=VARCHAR},
      </if>
      <if test="mlPhotolink != null">
        #{mlPhotolink,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.music.manager.pojo.MusicLinkExample" resultType="java.lang.Long">
    select count(*) from musiclink
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update musiclink
    <set>
      <if test="record.mlId != null">
        ml_id = #{record.mlId,jdbcType=INTEGER},
      </if>
      <if test="record.mlSongname != null">
        ml_songName = #{record.mlSongname,jdbcType=VARCHAR},
      </if>
      <if test="record.mlSinger != null">
        ml_singer = #{record.mlSinger,jdbcType=VARCHAR},
      </if>
      <if test="record.mlSonglink != null">
        ml_songLink = #{record.mlSonglink,jdbcType=VARCHAR},
      </if>
      <if test="record.mlLyriclink != null">
        ml_lyricLink = #{record.mlLyriclink,jdbcType=VARCHAR},
      </if>
      <if test="record.mlPhotolink != null">
        ml_photoLink = #{record.mlPhotolink,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update musiclink
    set ml_id = #{record.mlId,jdbcType=INTEGER},
      ml_songName = #{record.mlSongname,jdbcType=VARCHAR},
      ml_singer = #{record.mlSinger,jdbcType=VARCHAR},
      ml_songLink = #{record.mlSonglink,jdbcType=VARCHAR},
      ml_lyricLink = #{record.mlLyriclink,jdbcType=VARCHAR},
      ml_photoLink = #{record.mlPhotolink,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.music.manager.pojo.MusicLink">
    update musiclink
    <set>
      <if test="mlSongname != null">
        ml_songName = #{mlSongname,jdbcType=VARCHAR},
      </if>
      <if test="mlSinger != null">
        ml_singer = #{mlSinger,jdbcType=VARCHAR},
      </if>
      <if test="mlSonglink != null">
        ml_songLink = #{mlSonglink,jdbcType=VARCHAR},
      </if>
      <if test="mlLyriclink != null">
        ml_lyricLink = #{mlLyriclink,jdbcType=VARCHAR},
      </if>
      <if test="mlPhotolink != null">
        ml_photoLink = #{mlPhotolink,jdbcType=VARCHAR},
      </if>
    </set>
    where ml_id = #{mlId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.music.manager.pojo.MusicLink">
    update musiclink
    set ml_songName = #{mlSongname,jdbcType=VARCHAR},
      ml_singer = #{mlSinger,jdbcType=VARCHAR},
      ml_songLink = #{mlSonglink,jdbcType=VARCHAR},
      ml_lyricLink = #{mlLyriclink,jdbcType=VARCHAR},
      ml_photoLink = #{mlPhotolink,jdbcType=VARCHAR}
    where ml_id = #{mlId,jdbcType=INTEGER}
  </update>
</mapper>