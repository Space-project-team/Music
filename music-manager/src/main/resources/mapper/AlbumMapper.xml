<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.music.manager.mapper.AlbumMapper">
  <resultMap id="BaseResultMap" type="com.music.manager.pojo.Album">
    <id column="albumId" jdbcType="INTEGER" property="albumid" />
    <result column="albumName" jdbcType="VARCHAR" property="albumname" />
    <result column="issueDate" jdbcType="DATE" property="issuedate" />
    <result column="singerId" jdbcType="INTEGER" property="singerid" />
    <result column="languageId" jdbcType="INTEGER" property="languageid" />
    <result column="classifyId" jdbcType="INTEGER" property="classifyid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.music.manager.pojo.Album">
    <result column="albumIntro" jdbcType="LONGVARCHAR" property="albumintro" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    albumId, albumName, issueDate, singerId, languageId, classifyId
  </sql>
  <sql id="Blob_Column_List">
    albumIntro
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.music.manager.pojo.AlbumExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.music.manager.pojo.AlbumExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from album
    where albumId = #{albumid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from album
    where albumId = #{albumid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.music.manager.pojo.AlbumExample">
    delete from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.music.manager.pojo.Album">
    insert into album (albumId, albumName, issueDate, 
      singerId, languageId, classifyId, 
      albumIntro)
    values (#{albumid,jdbcType=INTEGER}, #{albumname,jdbcType=VARCHAR}, #{issuedate,jdbcType=DATE}, 
      #{singerid,jdbcType=INTEGER}, #{languageid,jdbcType=INTEGER}, #{classifyid,jdbcType=INTEGER}, 
      #{albumintro,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.music.manager.pojo.Album">
    insert into album
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="albumid != null">
        albumId,
      </if>
      <if test="albumname != null">
        albumName,
      </if>
      <if test="issuedate != null">
        issueDate,
      </if>
      <if test="singerid != null">
        singerId,
      </if>
      <if test="languageid != null">
        languageId,
      </if>
      <if test="classifyid != null">
        classifyId,
      </if>
      <if test="albumintro != null">
        albumIntro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="albumid != null">
        #{albumid,jdbcType=INTEGER},
      </if>
      <if test="albumname != null">
        #{albumname,jdbcType=VARCHAR},
      </if>
      <if test="issuedate != null">
        #{issuedate,jdbcType=DATE},
      </if>
      <if test="singerid != null">
        #{singerid,jdbcType=INTEGER},
      </if>
      <if test="languageid != null">
        #{languageid,jdbcType=INTEGER},
      </if>
      <if test="classifyid != null">
        #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="albumintro != null">
        #{albumintro,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.music.manager.pojo.AlbumExample" resultType="java.lang.Long">
    select count(*) from album
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update album
    <set>
      <if test="record.albumid != null">
        albumId = #{record.albumid,jdbcType=INTEGER},
      </if>
      <if test="record.albumname != null">
        albumName = #{record.albumname,jdbcType=VARCHAR},
      </if>
      <if test="record.issuedate != null">
        issueDate = #{record.issuedate,jdbcType=DATE},
      </if>
      <if test="record.singerid != null">
        singerId = #{record.singerid,jdbcType=INTEGER},
      </if>
      <if test="record.languageid != null">
        languageId = #{record.languageid,jdbcType=INTEGER},
      </if>
      <if test="record.classifyid != null">
        classifyId = #{record.classifyid,jdbcType=INTEGER},
      </if>
      <if test="record.albumintro != null">
        albumIntro = #{record.albumintro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update album
    set albumId = #{record.albumid,jdbcType=INTEGER},
      albumName = #{record.albumname,jdbcType=VARCHAR},
      issueDate = #{record.issuedate,jdbcType=DATE},
      singerId = #{record.singerid,jdbcType=INTEGER},
      languageId = #{record.languageid,jdbcType=INTEGER},
      classifyId = #{record.classifyid,jdbcType=INTEGER},
      albumIntro = #{record.albumintro,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update album
    set albumId = #{record.albumid,jdbcType=INTEGER},
      albumName = #{record.albumname,jdbcType=VARCHAR},
      issueDate = #{record.issuedate,jdbcType=DATE},
      singerId = #{record.singerid,jdbcType=INTEGER},
      languageId = #{record.languageid,jdbcType=INTEGER},
      classifyId = #{record.classifyid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.music.manager.pojo.Album">
    update album
    <set>
      <if test="albumname != null">
        albumName = #{albumname,jdbcType=VARCHAR},
      </if>
      <if test="issuedate != null">
        issueDate = #{issuedate,jdbcType=DATE},
      </if>
      <if test="singerid != null">
        singerId = #{singerid,jdbcType=INTEGER},
      </if>
      <if test="languageid != null">
        languageId = #{languageid,jdbcType=INTEGER},
      </if>
      <if test="classifyid != null">
        classifyId = #{classifyid,jdbcType=INTEGER},
      </if>
      <if test="albumintro != null">
        albumIntro = #{albumintro,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where albumId = #{albumid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.music.manager.pojo.Album">
    update album
    set albumName = #{albumname,jdbcType=VARCHAR},
      issueDate = #{issuedate,jdbcType=DATE},
      singerId = #{singerid,jdbcType=INTEGER},
      languageId = #{languageid,jdbcType=INTEGER},
      classifyId = #{classifyid,jdbcType=INTEGER},
      albumIntro = #{albumintro,jdbcType=LONGVARCHAR}
    where albumId = #{albumid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.music.manager.pojo.Album">
    update album
    set albumName = #{albumname,jdbcType=VARCHAR},
      issueDate = #{issuedate,jdbcType=DATE},
      singerId = #{singerid,jdbcType=INTEGER},
      languageId = #{languageid,jdbcType=INTEGER},
      classifyId = #{classifyid,jdbcType=INTEGER}
    where albumId = #{albumid,jdbcType=INTEGER}
  </update>
</mapper>